#geom_point(size=0) +
geom_smooth(method=lm, se=TRUE, fullrange=TRUE) +
geom_point(size=2) +
ylab("Varroa Load (mites/100 bees)") + # y axis label
xlab("Percent Hygienic Behavior") + # x axis label
theme_minimal(base_size = 17) # size of the text and label ticks
# HB by varroa load model
mod2 <- lm(data=ds, varroa_load_mites.100.bees ~ percent_hygienic + sampling_event )
summary(mod2)
Anova(mod2)
# Hygienic behavior by hive/yard, points number of hives, threshold dotted bar
ggplot(ds_2021, aes(x=yard, y=percent_hygienic, color=yard)) +
geom_boxplot(size=1) +
geom_text(aes(label=lab_ID), size=5) +
guides(color = guide_legend(override.aes = list(label = ''))) +
ylab("Percent Hygienic Behavior") + # y axis label
xlab("Bee Yard") + # x axis label
theme_minimal(base_size = 17) + # size of the text and label ticks
theme(legend.position = "none") + # place the legend at the top
scale_color_viridis(discrete = TRUE, option="H") +# color pallets option = A-H
geom_hline(yintercept=.8, linetype="dashed",
color = "red", size=1)
# set up the model
mod3 <- aov(data = ds_2021, percent_hygienic ~ yard)
summary(mod3)
# print table in increasing order based on some variable
ds_2021[order(ds_2021$percent_hygienic, decreasing = TRUE),]
##### HONEY YIELD ANALYSIS
# take only sampling event 4
dst4 <- ds_2021[ds_2021$sampling_event==4,]
# plot Honey yield by hive/yard
ggplot(dst4, aes(x=yard, y=honey_removed, color=yard)) +
geom_boxplot(size=1) +
geom_text(aes(label=lab_ID), size=5) +
guides(color = guide_legend(override.aes = list(label = ''))) +
ylab("Honey Yield (lbs.)") + # y axis label
xlab("Bee Yard") + # x axis label
theme_minimal(base_size = 17) + # size of the text and label ticks
theme(legend.position = "none") + # place the legend at the top
scale_color_viridis(discrete = TRUE, option="H") # color pallets option = A-H
#### FRAMES OF BEES ANALYSIS
# take only sampling event 1
dst1 <- ds_2021[ds_2021$sampling_event==1,]
# plot Honey yield by hive/yard
ggplot(dst1, aes(x=yard, y=frame_of_bees, color=yard)) +
geom_boxplot(size=1) +
geom_text(aes(label=lab_ID), size=5) +
guides(color = guide_legend(override.aes = list(label = ''))) +
ylab("Frames of Bees") + # y axis label
xlab("Bee Yard") + # x axis label
theme_minimal(base_size = 17) + # size of the text and label ticks
theme(legend.position = "none") + # place the legend at the top
scale_color_viridis(discrete = TRUE, option="H") # color pallets option = A-H
# 2021 percent hygienic freeze kill
ds_2021$FK_binary <- ifelse(ds_2021$FKB_percentile >= 0.95, 1,0) #"hygienic", "nonhygienic")
mean(ds_2021$FK_binary, na.rm=T) # get percentage of hygienic UBO
# subset of dataset with rows that have a LN2 test
FKB_2022 <- ds_2022[!is.na(ds_2022$FKB_percentile),]
UBO_2022 <- ds_2022[!is.na(ds_2022$UBO_assay_score),]
# select only columns we need
FKB_2022 <- select(FKB_2022, lab_ID, FKB_percentile)
UBO_2022 <- select(UBO_2022, lab_ID, UBO_assay_score)
# change column names
colnames(FKB_2022) <- c("lab_ID", "percent_hygienic")
colnames(UBO_2022) <- c("lab_ID", "UBO_assay_score_merged")
# merge hygienic behavior back in
ds_2022 <- merge(x=ds_2022, y=FKB_2022, all.x = TRUE)
ds_2022 <- merge(x=ds_2022, y=UBO_2022, all.x = TRUE)
## Plot freeze kill by varroa load (continuous/ all varroa sampling events)
# Add regression lines
ggplot(ds_2022, aes(x=percent_hygienic, y=varroa_load_mites.100.bees,
color=as.character(sampling_event))) +
#geom_point(size=0) +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE) +
geom_point(size=2) +
ylab("Varroa Load (mites/100 bees)") + # y axis label
xlab("Percent Hygienic Behavior") + # x axis label
theme_minimal(base_size = 17) + # size of the text and label ticks
theme(legend.position = "top") + # place the legend at the top
scale_color_viridis(discrete = TRUE, option="H", name="Time Point:") + # color pallets option = A-H
#geom_text(aes(label=lab_ID)) +
guides(color = guide_legend(override.aes = list(label = '')))
## Plot freeze kill by varroa load (continuous/ only sampling event 9)
# Add regression lines
ggplot(August_Data, aes(x=percent_hygienic, y=varroa_load_mites.100.bees,
color=as.character(sampling_event))) +
#geom_point(size=0) +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE) +
geom_point(size=2) +
ylab("Varroa Load (mites/100 bees)") + # y axis label
xlab("Percent Hygienic Behavior") + # x axis label
theme_minimal(base_size = 17) + # size of the text and label ticks
theme(legend.position = "top") + # place the legend at the top
scale_color_viridis(discrete = TRUE, option="H", name="Time Point:") + # color pallets option = A-H
#geom_text(aes(label=lab_ID)) +
guides(color = guide_legend(override.aes = list(label = '')))
# new plot that removes time points as a factor
ggplot(ds_2022, aes(x=percent_hygienic, y=varroa_load_mites.100.bees)) +
#geom_point(size=0) +
geom_smooth(method=lm, se=TRUE, fullrange=TRUE) +
geom_point(size=2) +
ylab("Varroa Load (mites/100 bees)") + # y axis label
xlab("Percent Hygienic Behavior") + # x axis label
theme_minimal(base_size = 17) # size of the text and label ticks
# create binary variable for Freeze Kill
ds_2022$FK_binary <- ifelse(ds_2022$percent_hygienic >= 0.95, 1, 0) #"hygienic", "nonhygienic")
mean(ds_2022$FK_binary, na.rm=T) # get percentage of hygienic FK
# create binary variable for UBO
ds_2022$UBO_binary <- ifelse(ds_2022$UBO_assay_score >= 0.65, 1, 0) #"hygienic", "nonhygienic")
mean(ds_2022$UBO_binary, na.rm=T) # get percentage of hygienic UBO
# create binary variable for UBO for merged UBO dataset
ds_2022$UBO_binary_merged <- ifelse(ds_2022$UBO_assay_score_merged >= 0.65, 1, 0) #"hygienic", "nonhygienic")
mean(ds_2022$UBO_binary, na.rm=T) # get percentage of hygienic UBO
# differences in freeze kill between selection processes
boxplot(ds_2022$percent_hygienic ~ ds_2022$treatment_grp)
mod <- aov(ds_2022$percent_hygienic ~ ds_2022$treatment_grp)
summary(mod)
# differences in freeze kill between selction processes
boxplot(ds_2022$UBO_assay_score ~ ds_2022$treatment_grp)
mod <- aov(ds_2022$UBO_assay_score ~ ds_2022$treatment_grp)
summary(mod)
# fisher exaxt tests (non parametric chi-square tests for selection method by
# prortion hygienic)
fisher.test(y = ds_2022$FK_binary, x = ds_2022$treatment_grp)
fisher.test(y = ds_2022$UBO_binary, x = ds_2022$treatment_grp)
# varroa load by group FHA vs NPQ (ANOVA)
mod <- aov(ds_2022$varroa_load_mites.100.bees ~ ds_2022$treatment_grp)
summary(mod)
# varroa load by UBO Binary
boxplot(ds_2022$varroa_load_mites.100.bees~ds_2022$UBO_binary)
summary(aov(ds_2022$varroa_load_mites.100.bees~ds_2022$UBO_binary))
# select august course
August_Data = ds_2022[ds_2022$sampling_event == 9,] # UBO SE7
# varroa load by FK Binary August
boxplot(August_Data$varroa_load_mites.100.bees ~ August_Data$FK_binary)
summary(aov(August_Data$varroa_load_mites.100.bees ~ August_Data$FK_binary))
# varroa load by UBO Binary August
boxplot(August_Data$varroa_load_mites.100.bees ~ August_Data$UBO_binary_merged)
summary(aov(August_Data$varroa_load_mites.100.bees ~ August_Data$UBO_binary_merged))
hist(August_Data$varroa_load_mites.100.bees)
# NEW ANALYSIS!!! nosema load by group FHA vs NPQ (ANOVA)
mod4 <- aov(ds_2022$nosema_load_spores.bee ~ ds_2022$treatment_grp)
summary(mod4)
# NEW ANALYSIS!!! FKA (binary/continuous) by nosema load (omit treated hives)
## Plot freeze kill by nosema load (continuous/ all nosema sampling events)
# Add regression lines
ggplot(ds_2022, aes(x=percent_hygienic, y=nosema_load_spores.bee,
color=as.character(sampling_event))) +
#geom_point(size=0) +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE) +
geom_point(size=2) +
ylab("Nosema Load (spores/bee)") + # y axis label
xlab("Percent Hygienic Behavior") + # x axis label
theme_minimal(base_size = 17) + # size of the text and label ticks
theme(legend.position = "top") + # place the legend at the top
scale_color_viridis(discrete = TRUE, option="H", name="Time Point:") + # color pallets option = A-H
#geom_text(aes(label=lab_ID)) +
guides(color = guide_legend(override.aes = list(label = '')))
# nosema load by FK Binary (all nosema sampling events)
boxplot(ds_2022$nosema_load_spores.bee ~ ds_2022$FK_binary)
summary(aov(ds_2022$nosema_load_spores.bee ~ ds_2022$FK_binary))
# NEW ANALYSIS!!! UBO (binary/continuous) by nosema load (omit treated hives)
## Plot UBO by nosema load (continuous)
# Add regression lines
ggplot(ds_2022, aes(x=UBO_assay_score, y=nosema_load_spores.bee,
color=as.character(sampling_event))) +
#geom_point(size=0) +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE) +
geom_point(size=2) +
ylab("Nosema Load (spores/bees)") + # y axis label
xlab("Percent Hygienic Behavior") + # x axis label
theme_minimal(base_size = 17) + # size of the text and label ticks
theme(legend.position = "top") + # place the legend at the top
scale_color_viridis(discrete = TRUE, option="H", name="Time Point:") + # color pallets option = A-H
#geom_text(aes(label=lab_ID)) +
guides(color = guide_legend(override.aes = list(label = '')))
# nosema load by UBO Binary
boxplot(ds_2022$nosema_load_spores.bee~ds_2022$UBO_binary)
summary(aov(ds_2022$nosema_load_spores.bee~ds_2022$UBO_binary))
# NEW ANALYSIS!!! FKA (binary/continuous) by virus load (omit treated hives)
## Plot FKA by virus load (continuous)
ggplot(ds_2022, aes(x=percent_hygienic, y=virus_count,
color=as.character(sampling_event))) +
#geom_point(size=0) +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE) +
geom_point(size=2) +
ylab("Virus Count") + # y axis label
xlab("Percent Hygienic Behavior") + # x axis label
theme_minimal(base_size = 17) + # size of the text and label ticks
theme(legend.position = "top") + # place the legend at the top
scale_color_viridis(discrete = TRUE, option="H", name="Time Point:") + # color pallets option = A-H
#geom_text(aes(label=lab_ID)) +
guides(color = guide_legend(override.aes = list(label = '')))
boxplot(ds_2022$virus_count ~ ds_2022$FK_binary)
summary(aov(ds_2022$virus_count ~ ds_2022$FK_binary))
# NEW ANALYSIS!!! UBO (binary/continuous) by virus load (omit treated hives)
## Plot UBO by virus load (continuous)
# Add regression lines
ggplot(ds_2022, aes(x=UBO_assay_score, y=virus_count,
color=as.character(sampling_event))) +
#geom_point(size=0) +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE) +
geom_point(size=2) +
ylab("Virus Count") + # y axis label
xlab("Percent Hygienic Behavior") + # x axis label
theme_minimal(base_size = 17) + # size of the text and label ticks
theme(legend.position = "top") + # place the legend at the top
scale_color_viridis(discrete = TRUE, option="H", name="Time Point:") + # color pallets option = A-H
#geom_text(aes(label=lab_ID)) +
guides(color = guide_legend(override.aes = list(label = '')))
## virus load by UBO (Binary)
boxplot(ds_2022$virus_count~ds_2022$UBO_binary)
summary(aov(ds_2022$virus_count~ds_2022$UBO_binary))
# NEW ANALYSIS!!! FKA by UBO categorical and continuous
## Plot FKA by UBO (continuous)
# Add regression lines
ggplot(ds_2022, aes(x=UBO_assay_score, y=percent_hygienic,
color=as.character(sampling_event))) +
#geom_point(size=0) +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE) +
geom_point(size=2) +
ylab("FKB Assay Percent") + # y axis label
xlab("UBO Assay Percent") + # x axis label
theme_minimal(base_size = 17) + # size of the text and label ticks
theme(legend.position = "top") + # place the legend at the top
scale_color_viridis(discrete = TRUE, option="H", name="Time Point:") + # color pallets option = A-H
#geom_text(aes(label=lab_ID)) +
guides(color = guide_legend(override.aes = list(label = '')))
## FKA by UBO (Binary)
mosaicplot(ds_2022$FK_binary~ds_2022$UBO_binary)
summary(aov(ds_2022$FK_binary~ds_2022$UBO_binary))
# NEW ANALYSIS!!! UBO (binary/continuous) by virus load (omit treated hives)
## Plot UBO by virus load (continuous)
# Add regression lines
ggplot(ds_2022, aes(x=UBO_assay_score, y=virus_count,
color=as.character(sampling_event))) +
#geom_point(size=0) +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE) +
geom_point(size=2) +
ylab("Virus Count") + # y axis label
xlab("Percent Hygienic Behavior") + # x axis label
theme_minimal(base_size = 17) + # size of the text and label ticks
theme(legend.position = "top") + # place the legend at the top
scale_color_viridis(discrete = TRUE, option="H", name="Time Point:") + # color pallets option = A-H
#geom_text(aes(label=lab_ID)) +
guides(color = guide_legend(override.aes = list(label = '')))
# NEW ANALYSIS!!! FKA by UBO categorical and continuous
## Plot FKA by UBO (continuous)
# Add regression lines
ggplot(ds_2022, aes(x=UBO_assay_score, y=percent_hygienic,
color=as.character(sampling_event))) +
#geom_point(size=0) +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE) +
geom_point(size=2) +
ylab("FKB Assay Percent") + # y axis label
xlab("UBO Assay Percent") + # x axis label
theme_minimal(base_size = 17) + # size of the text and label ticks
theme(legend.position = "top") + # place the legend at the top
scale_color_viridis(discrete = TRUE, option="H", name="Time Point:") + # color pallets option = A-H
#geom_text(aes(label=lab_ID)) +
guides(color = guide_legend(override.aes = list(label = '')))
## FKA by UBO (Binary)
mosaicplot(ds_2022$FK_binary~ds_2022$UBO_binary)
summary(aov(ds_2022$FK_binary~ds_2022$UBO_binary))
# NEW ANALYSIS!!! FKA by UBO categorical and continuous
## Plot FKA by UBO (continuous)
# Add regression lines
ggplot(ds_2022, aes(x=UBO_assay_score, y=percent_hygienic,
color=as.character(sampling_event))) +
#geom_point(size=0) +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE) +
geom_point(size=2) +
ylab("FKB Assay Percent") + # y axis label
xlab("UBO Assay Percent") + # x axis label
theme_minimal(base_size = 17) + # size of the text and label ticks
theme(legend.position = c(5,5)) + # place the legend at the top
scale_color_viridis(discrete = TRUE, option="H", name="Time Point:") + # color pallets option = A-H
#geom_text(aes(label=lab_ID)) +
guides(color = guide_legend(override.aes = list(label = '')))
# NEW ANALYSIS!!! FKA by UBO categorical and continuous
## Plot FKA by UBO (continuous)
# Add regression lines
ggplot(ds_2022, aes(x=UBO_assay_score, y=percent_hygienic,
color=as.character(sampling_event))) +
#geom_point(size=0) +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE) +
geom_point(size=3) +
ylab("FKB Assay Percent") + # y axis label
xlab("UBO Assay Percent") + # x axis label
theme_minimal(base_size = 17) + # size of the text and label ticks
theme(legend.position = c(5,5)) + # place the legend at the top
scale_color_viridis(discrete = TRUE, option="H", name="Time Point:") + # color pallets option = A-H
#geom_text(aes(label=lab_ID)) +
guides(color = guide_legend(override.aes = list(label = '')))
# Hygienic behavior by hive/yard, points number of hives, threshold dotted bar
ggplot(ds, aes(x=anonBeek, y=assay_score, color=beekeeper)) +
geom_boxplot(size=1) +
geom_point(size=3) +
guides(color = guide_legend(override.aes = list(label = ''))) +
ylab("Percent Hygienic Behavior") + # y axis label
xlab("Beekeeper") + # x axis label
theme_minimal(base_size = 17) + # size of the text and label ticks
theme(legend.position = "none") + # place the legend at the top
scale_color_manual(values = c("darkturquoise", "tomato3", "grey")) +
geom_hline(yintercept=.6, linetype="dashed",
color = "black", size=1)
## UBO by June Nosema load continuous
# Add regression lines
ggplot(ds, aes(x=assay_score, y=june_nosema_load_spores.bee,
color=as.character(beekeeper))) +
#geom_point(size=0) +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE) +
geom_point(size=2) +
ylab("June Nosema Load (spores/bee)") + # y axis label
xlab("Percent Hygienic Behavior") + # x axis label
theme_minimal(base_size = 17) + # size of the text and label ticks
theme(legend.position = "top") + # place the legend at the top
scale_color_viridis(discrete = TRUE, option="H", name="Beekeeper:") + # color pallets option = A-H
#geom_text(aes(label=lab_ID)) +
guides(color = guide_legend(override.aes = list(label = '')))
## UBO by June Nosema load continuous
# Add regression lines
ggplot(ds, aes(x=assay_score, y=june_nosema_load_spores.bee,
color=as.character(anonBeek))) +
#geom_point(size=0) +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE, size - 2) +
geom_point(size=3) +
ylab("June Nosema Load (spores/bee)") + # y axis label
xlab("Percent Hygienic Behavior") + # x axis label
theme_minimal(base_size = 17) + # size of the text and label ticks
theme(legend.position = "top") + # place the legend at the top
scale_color_manual(values = c("darkturquoise", "tomato3", "grey"), name="Beekeeper:") + # color pallets option = A-H
#geom_text(aes(label=lab_ID)) +
guides(color = guide_legend(override.aes = list(label = '')))
## UBO by June Nosema load continuous
# Add regression lines
ggplot(ds, aes(x=assay_score, y=june_nosema_load_spores.bee,
color=as.character(anonBeek))) +
#geom_point(size=0) +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE, size = 2) +
geom_point(size=3) +
ylab("June Nosema Load (spores/bee)") + # y axis label
xlab("Percent Hygienic Behavior") + # x axis label
theme_minimal(base_size = 17) + # size of the text and label ticks
theme(legend.position = "top") + # place the legend at the top
scale_color_manual(values = c("darkturquoise", "tomato3", "grey"), name="Beekeeper:") + # color pallets option = A-H
#geom_text(aes(label=lab_ID)) +
guides(color = guide_legend(override.aes = list(label = '')))
cor.test(dsSplit$`Jack Rath`$assay_score, dsSplit$`Jack Rath`$june_nosema_load_spores.bee, method="spearman", exact = F)
cor.test(dsSplit$`Jack Rath`$assay_score, dsSplit$`Jack Rath`$june_nosema_load_spores.bee, method="spearman", exact = F)
cor.test(dsSplit$`Mike Palmer`$assay_score, dsSplit$`Mike Palmer`$june_nosema_load_spores.bee, method="spearman", exact = F)
cor.test(dsSplit$`Andrew Munkres`$assay_score, dsSplit$`Andrew Munkres`$june_nosema_load_spores.bee, method="spearman", exact = F)
cor.test(dsSplit$`Jack Rath`$assay_score, dsSplit$`Jack Rath`$june_nosema_load_spores.bee, method="spearman", exact = F)
cor.test(dsSplit$`Mike Palmer`$assay_score, dsSplit$`Mike Palmer`$june_nosema_load_spores.bee, method="spearman", exact = F)
cor.test(dsSplit$`Andrew Munkres`$assay_score, dsSplit$`Andrew Munkres`$june_nosema_load_spores.bee, method="spearman", exact = F)
hist(ds_2022$varroa_count)
View(dst1)
# june varroa for just andrew by ubo
cor.test(dsSplit$`Andrew Munkres`$assay_score, dsSplit$`Andrew Munkres`$june_varroa_load_mites.100.bees, method="spearman", exact = F)
cor.test(dsSplit$`Mike Palmer`$assay_score, dsSplit$`Mike Palmer`$june_varroa_load_mites.100.bees, method="spearman", exact = F)
cor.test(dsSplit$`Jack Rath`$assay_score, dsSplit$`Jack Rath`$june_varroa_load_mites.100.bees, method="spearman", exact = F)
# august varroa load by beekeeper
cor.test(dsSplit$`Andrew Munkres`$assay_score, dsSplit$`Andrew Munkres`$august_varroa_load_mites.100.bees, method="spearman", exact = F)
cor.test(dsSplit$`Mike Palmer`$assay_score, dsSplit$`Mike Palmer`$august_varroa_load_mites.100.bees, method="spearman", exact = F)
cor.test(dsSplit$`Jack Rath`$assay_score, dsSplit$`Jack Rath`$august_varroa_load_mites.100.bees, method="spearman", exact = F)
# june varroa  by ubo
cor.test(ds$assay_score, ds$june_varroa_load_mites.100.bees, method="spearman", exact = F)
# june varroa  by ubo
cor.test(ds$assay_score, ds$august_varroa_load_mites.100.bees, method="spearman", exact = F)
cor.test(dsSplit$`Jack Rath`$assay_score, dsSplit$`Jack Rath`$june_nosema_load_spores.bee, method="spearman", exact = F)
cor.test(dsSplit$`Mike Palmer`$assay_score, dsSplit$`Mike Palmer`$june_nosema_load_spores.bee, method="spearman", exact = F)
cor.test(dsSplit$`Andrew Munkres`$assay_score, dsSplit$`Andrew Munkres`$june_nosema_load_spores.bee, method="spearman", exact = F)
# june nosema by ubo
cor.test(ds$assay_score, ds$june_nosema_load_spores.bee, method="spearman", exact = F)
## UBO by August Nosema load continuous
# Add regression lines
ggplot(ds, aes(x=assay_score, y=august_nosema_load_spores.bee,
color=as.character(beekeeper))) +
#geom_point(size=0) +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE) +
geom_point(size=2) +
ylab("August Nosema Load (spores/bee)") + # y axis label
xlab("Percent Hygienic Behavior") + # x axis label
theme_minimal(base_size = 17) + # size of the text and label ticks
theme(legend.position = "top") + # place the legend at the top
scale_color_viridis(discrete = TRUE, option="H", name="Time Point:") + # color pallets option = A-H
#geom_text(aes(label=lab_ID)) +
guides(color = guide_legend(override.aes = list(label = '')))
## UBO by June Nosema load binary
boxplot(ds$august_nosema_load_spores.bee~ds$UBO_binary)
summary(aov(ds$august_nosema_load_spores.bee~ds$UBO_binary))
# UBO by frames of brood
ggplot(ds, aes(x=frames_of_brood, y=assay_score,
color=as.character(beekeeper))) +
#geom_point(size=0) +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE) +
geom_point(size=2) +
ylab("UBO Assay Score)") + # y axis label
xlab("Colony Size") + # x axis label
theme_minimal(base_size = 17) + # size of the text and label ticks
theme(legend.position = "top") + # place the legend at the top
scale_color_viridis(discrete = TRUE, option="H", name="Time Point:") + # color pallets option = A-H
#geom_text(aes(label=lab_ID)) +
guides(color = guide_legend(override.aes = list(label = '')))
ggplot(ds_2022, aes(x=percent_hygienic, y=nosema_load_spores.bee,
color=as.character(sampling_event))) +
#geom_point(size=0) +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE) +
geom_point(size=2) +
ylab("Nosema Load (spores/bee)") + # y axis label
xlab("Percent Hygienic Behavior") + # x axis label
theme_minimal(base_size = 17) + # size of the text and label ticks
theme(legend.position = "top") + # place the legend at the top
scale_color_viridis(discrete = TRUE, option="H", name="Time Point:") + # color pallets option = A-H
#geom_text(aes(label=lab_ID)) +
guides(color = guide_legend(override.aes = list(label = '')))
# nosema load by FK Binary (all nosema sampling events)
boxplot(ds_2022$nosema_load_spores.bee ~ ds_2022$FK_binary)
summary(aov(ds_2022$nosema_load_spores.bee ~ ds_2022$FK_binary))
# NEW ANALYSIS!!! UBO (binary/continuous) by nosema load (omit treated hives)
## Plot UBO by nosema load (continuous)
# Add regression lines
ggplot(ds_2022, aes(x=UBO_assay_score, y=nosema_load_spores.bee,
color=as.character(sampling_event))) +
#geom_point(size=0) +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE) +
geom_point(size=2) +
ylab("Nosema Load (spores/bees)") + # y axis label
xlab("Percent Hygienic Behavior") + # x axis label
theme_minimal(base_size = 17) + # size of the text and label ticks
theme(legend.position = "top") + # place the legend at the top
scale_color_viridis(discrete = TRUE, option="H", name="Time Point:") + # color pallets option = A-H
#geom_text(aes(label=lab_ID)) +
guides(color = guide_legend(override.aes = list(label = '')))
# nosema load by UBO Binary
boxplot(ds_2022$nosema_load_spores.bee~ds_2022$UBO_binary)
summary(aov(ds_2022$nosema_load_spores.bee~ds_2022$UBO_binary))
# NEW ANALYSIS!!! FKA (binary/continuous) by virus load (omit treated hives)
## Plot FKA by virus load (continuous)
ggplot(ds_2022, aes(x=percent_hygienic, y=virus_count,
color=as.character(sampling_event))) +
#geom_point(size=0) +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE) +
geom_point(size=2) +
ylab("Virus Count") + # y axis label
xlab("Percent Hygienic Behavior") + # x axis label
theme_minimal(base_size = 17) + # size of the text and label ticks
theme(legend.position = "top") + # place the legend at the top
scale_color_viridis(discrete = TRUE, option="H", name="Time Point:") + # color pallets option = A-H
#geom_text(aes(label=lab_ID)) +
guides(color = guide_legend(override.aes = list(label = '')))
boxplot(ds_2022$virus_count ~ ds_2022$FK_binary)
summary(aov(ds_2022$virus_count ~ ds_2022$FK_binary))
# NEW ANALYSIS!!! UBO (binary/continuous) by virus load (omit treated hives)
## Plot UBO by virus load (continuous)
# Add regression lines
ggplot(ds_2022, aes(x=UBO_assay_score, y=virus_count,
color=as.character(sampling_event))) +
#geom_point(size=0) +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE) +
geom_point(size=2) +
ylab("Virus Count") + # y axis label
xlab("Percent Hygienic Behavior") + # x axis label
theme_minimal(base_size = 17) + # size of the text and label ticks
theme(legend.position = "top") + # place the legend at the top
scale_color_viridis(discrete = TRUE, option="H", name="Time Point:") + # color pallets option = A-H
#geom_text(aes(label=lab_ID)) +
guides(color = guide_legend(override.aes = list(label = '')))
## virus load by UBO (Binary)
boxplot(ds_2022$virus_count~ds_2022$UBO_binary)
summary(aov(ds_2022$virus_count~ds_2022$UBO_binary))
# NEW ANALYSIS!!! FKA by UBO categorical and continuous
## Plot FKA by UBO (continuous)
# Add regression lines
ggplot(ds_2022, aes(x=UBO_assay_score, y=percent_hygienic,
color=as.character(sampling_event))) +
#geom_point(size=0) +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE) +
geom_point(size=3) +
ylab("FKB Assay Percent") + # y axis label
xlab("UBO Assay Percent") + # x axis label
theme_minimal(base_size = 17) + # size of the text and label ticks
theme(legend.position = c(5,5)) + # place the legend at the top
scale_color_viridis(discrete = TRUE, option="H", name="Time Point:") + # color pallets option = A-H
#geom_text(aes(label=lab_ID)) +
guides(color = guide_legend(override.aes = list(label = '')))
# NEW ANALYSIS!!! FKA by UBO categorical and continuous
## Plot FKA by UBO (continuous)
# Add regression lines
ggplot(ds_2022, aes(x=UBO_assay_score, y=percent_hygienic,
color=as.character(sampling_event))) +
#geom_point(size=0) +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE) +
geom_point(size=3) +
ylab("FKB Assay Percent") + # y axis label
xlab("UBO Assay Percent") + # x axis label
theme_minimal(base_size = 17) + # size of the text and label ticks
theme(legend.position = c(5,5)) + # place the legend at the top
scale_color_viridis(discrete = TRUE, option="H", name="Time Point:") + # color pallets option = A-H
#geom_text(aes(label=lab_ID)) +
guides(color = guide_legend(override.aes = list(label = '')))
ds_2022[ds_2022$sampling_event==6,]
ds_2022[ds_2022$sampling_event==7,]
ds_2022[ds_2022$sampling_event==7,]$percent_hygienic
ds_2022[ds_2022$sampling_event==7,]$UBO_assay_score_merged
plot(ds_2022[ds_2022$sampling_event==7,]$percent_hygienic, ds_2022[ds_2022$sampling_event==7,]$UBO_assay_score_merged)
plot(ds_2022[ds_2022$sampling_event==7,]$UBO_assay_score_merged, ds_2022[ds_2022$sampling_event==7,]$percent_hygienic)
plot(ds_2022[ds_2022$sampling_event==7,]$UBO_assay_score_merged, ds_2022[ds_2022$sampling_event==7,]$percent_hygienic)
lm(ds_2022[ds_2022$sampling_event==7,]$UBO_assay_score_merged, ds_2022[ds_2022$sampling_event==7,]$percent_hygienic)
lm(ds_2022[ds_2022$sampling_event==7,]$UBO_assay_score_merged~ds_2022[ds_2022$sampling_event==7,]$percent_hygienic)
cor.test(ds_2022[ds_2022$sampling_event==7,]$UBO_assay_score_merged, ds_2022[ds_2022$sampling_event==7,]$percent_hygienic,  method="spearman", exact = F))
cor.test(ds_2022[ds_2022$sampling_event==7,]$UBO_assay_score_merged, ds_2022[ds_2022$sampling_event==7,]$percent_hygienic,  method="spearman", exact = F)
